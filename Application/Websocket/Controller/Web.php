<?php
/**
 * Created by PhpStorm.
 * User: dongkai
 * Date: 2018/4/3
 * Time: 下午1:56
 */
namespace  App\Websocket\Controller;

use App\Models\DataCenter;

use App\Models\User\Account;
use App\Models\User\Role;
use AutoMsg\ConnectingReq;
use AutoMsg\ConnectingResult;
use AutoMsg\CreateRoleReq;
use AutoMsg\CreateRoleResult;
use AutoMsg\MsgBaseRev;
use AutoMsg\MsgBaseSend;
use AutoMsg\RoleLists;
use EasySwoole\Core\Socket\AbstractInterface\WebSocketController;
use EasySwoole\Core\Swoole\ServerManager;

class Web extends WebSocketController
{
    function actionNotFound(?string $actionName)
    {
        parent::actionNotFound($actionName); // TODO: Change the autogenerated stub
        $MsgRev = new MsgBaseRev();
        $MsgRev->mergeFromString($this->client()->getData());
        $MsgId = $MsgRev->getMsgId();
        var_dump($MsgId);
        $Data = $MsgRev->getData();
        if($MsgId == 1004){
            $ConnectingReq = new ConnectingReq();
            $ConnectingReq->mergeFromString($Data);
            $token = $ConnectingReq->getToken();
            //redis查询token是否存在
            $Account = new Account();
            $uid = $Account->getToken($token);
            if($uid){
                //登录成功
                $data = new \App\Protobuf\Result\ConnectingResult($uid);
                $str = new \App\Protobuf\Result\MsgBaseSend(1057,$data);
                ServerManager::getInstance()->getServer()->push($this->client()->getFd(),$str,WEBSOCKET_OPCODE_BINARY);
            }
        }elseif ($MsgId == 1007){
            $create_req_data = new \App\Protobuf\Req\CreateRoleReq();
            $data = ['uid'=>2,'nickname'=>$$create_req_data['Name'],'sex'=>$create_req_data['Sex'],'status'=>1,'create_time'=>time()];
            $Role = new Role();
            $rs = $Role->setRole($data);
            if($rs){
                //角色创建成功
                $data = new \App\Protobuf\Result\CreateRoleResult();
                $str  = new \App\Protobuf\Result\MsgBaseSend(1060,$data);
                ServerManager::getInstance()->getServer()->push($this->client()->getFd(),$str,WEBSOCKET_OPCODE_BINARY);
            }else{
                //角色创建失败
            }
        }
    }
    function index()
    {
        $this->response()->write("123");

    }

    /**
     * 向所有人推送的控制器
     */
    public function pp()
    {
        $dataCenter = new DataCenter();
        $fds = $dataCenter->getMyFd(); //获取我所有的Fd
        foreach ($fds as $fd) {
            $massTemplate = new Mass(['fd' => $fd,'data' => 11,]);
            TaskManager::async($massTemplate);
        }


//        $this->response()->write();
    }

}